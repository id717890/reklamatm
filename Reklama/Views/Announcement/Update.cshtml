@using System.Globalization
@using Reklama
@model Domain.Entity.Announcements.Announcement

@{
    ViewBag.Title = "Создание нового объявления";
    Layout = "~/Views/_Layout/_Mobile.cshtml";
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/Realty.js")
    @Scripts.Render("~/Scripts/common.js")
    @Scripts.Render("~/Scripts/jquery-te-1.4.0.min.js")
    @Styles.Render("~/Content/jquery-te-1.4.0.css")

    <!-- 1. Add latest jQuery and fancybox files -->
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.4.1/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js"></script>
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css" />
    <style>
        .thumb img {
            -webkit-filter: grayscale(0);
            filter: none;
            border-radius: 5px;
            background-color: #fff;
            border: 1px solid #ddd;
            padding: 5px;
        }

            .thumb img:hover {
                -webkit-filter: grayscale(1);
                filter: grayscale(1);
            }

        .thumb {
            padding: 5px;
        }



        .jqte {
            width: inherit !important;
        }

        input.input-validation-error + label {
            border: 1px solid #E80C4D !important;
        }

        /* styles for validation helpers */
        .field-validation-error {
            color: #e80c4d;
            font: bold 12px Arial;
        }

        .field-validation-valid {
            display: none;
        }

        .input-validation-error {
            border: 1px solid #e80c4d !important;
        }

        .field-validation-error {
            color: #e80c4d !important;
            white-space: nowrap;
            float: none !important;
        }

            .field-validation-error span {
                color: #e80c4d !important;
                white-space: nowrap;
            }

        input[type="checkbox"].input-validation-error {
            border: 0 none;
        }

        .validation-summary-errors {
            color: #e80c4d;
            font-weight: bold;
            font-size: 1.1em;
        }

        .validation-summary-valid {
            display: none;
        }
    </style>
}

<div class="bg-silver">
    <div class="main-header">
        <div class="btn-panel mb-2 mt-2 d-inline-block">
            <a href="@Url.Action("Index", "Home")">
                <img class="img-logo" style="margin: 0; max-height: 39px;" src="/Images/System/logo3.png" alt="reklama.tm" />
            </a>
        </div>
    </div>
    <div class="main-container px-3" style="padding-top: 65px">
        <form id="formCreate" action="/Announcement/Update/@Model.Id" method="post">
            <div class="form-group">
                <div class="label-container">@Html.LabelFor(n => n.Name)</div>
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", id = "name-field" })
                @Html.ValidationMessageFor(x => x.Name)
            </div>
            
            <div class="form-group">
                <label for="city-field">@Resources.Resource.FormCity:</label>
                @Html.DropDownListFor(x => x.CityId, new SelectList((ViewBag.Cities), "Id", "Name"), @Resources.Resource.FormCityPlacceholder, new { @class = "form-control", id = "city-field" })
                @Html.ValidationMessageFor(x => x.CityId)
            </div>

            <div class="form-group">
                @foreach (var item in (SelectList)ViewBag.Categories)
                {
                    <div class="item-container">
                        <div class="item">
                            @Html.RadioButtonFor(m => m.CategoryId, item.Value, new { id = "categoryButtom" + item.Value, name = "CategoryId", @class = "radio" })
                            @Html.LabelFor(m => m, item.Text, new { @for = "categoryButtom" + item.Value })
                        </div>
                    </div>
                }
                @Html.ValidationMessageFor(s => s.CategoryId)
            </div>

            <label for="price-field">@Resources.Resource.FormPrice:</label>

            <div class="input-group mb-3">
                @Html.TextBoxFor(x => x.Price, new { Class = "regInp1 form-control", @type = "number", id = "price-field", step = "0.1" })
                <div class="input-group-prepend">
                    <span class="input-group-text" id="basic-addon2" style="min-width: 45px; text-align: center"><i class="fa fa-dollar-sign"></i></span>
                </div>
                @Html.ValidationMessageFor(x => x.Price)
                @Html.DropDownListFor(x => x.CurrencyId, new SelectList(ViewBag.Currencies, "Id", "Name"), new { Class = "pType d-none" })
            </div>

            <div class="form-group">
                <label for="phone-field">@Resources.Resource.FormPhone:</label>
                @Html.TextBoxFor(model => model.Phone, new { @class = "regInp1 form-control", @type = "text", id = "phone-field" })
            </div>

            <div class="form-group desctiption-textarea">
                <label for="description-field"></label>
                <label>@Resources.Resource.FormDescription</label>
                @Html.TextAreaFor(x => x.Description, new { @rows = 4 })
                @Html.ValidationMessageFor(x => x.Description)
            </div>

            <div class="registerInW">
                <div class="borderReg ">
                    <div class="fieldItem">
                        <span class="field-title">@Resources.Resource.FormPhotos:</span>
                        <div id="vueuploader">
                            <button type="button" class="btn btn-large  btn-outline-primary w-100" onclick="document.getElementById('myfile').click();">
                                <i class="fa fa-camera"></i>
                                @Resources.Resource.BtnAddPhoto
                            </button>

                            <input type="file" id="myfile" ref="fileInput" style="display: none;" v-on:change="onFileSelected('Announcement', $event)" multiple />

                            @if (ViewBag.IsEdit == false)
                            {

                                <div id="imageContainer" style="display: none"></div>
                                <div id="imgcontainer" class="row px-2"></div>
                            }
                            else
                            {
                                <div id="imageContainer" style="display: none">
                                    @if (Model.Images != null && Model.Images.Any())
                                    {
                                        foreach (var photo in Model.Images)
                                        {
                                            <input name="imagesNames[]" class="uploadedImage" data-filename="@("num" + photo.Id)" value="@photo.Link;false" />
                                        }
                                    }
                                </div>

                                <div id="imgcontainer" class="row px-2">
                                    @if (Model.Images != null && Model.Images.Any())
                                    {
                                        foreach (var photo in Model.Images)
                                        {
                                            <div class="col-lg-4 col-md-6 col-6 px-0 thumb img-block-gallery" data-filename="@("image_" + photo.Id)" id="@("image_" + photo.Id)">
                                                <a href="#" class="button remove remove-times" title="" onclick="javascript: removeImage(@("'num" + photo.Id + "', '" + photo.Id + "')"); return false;">
                                                    <i class="fa fa-times fa-2x text-danger"></i>
                                                </a>
                                                <a style="float: right; width: 100%;" href="#" onclick="event.preventDefault()">
                                                    <img class="img-fluid" style="width: 100%" src=@("/Images/Thumbnails/Announcement/" + photo.Link)>
                                                </a>
                                            </div>
                                        }
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="borderReg d-none">
                @Html.TextBoxFor(m => m.SectionId, Model.SectionId)
                @Html.TextBoxFor(m => m.SubsectionId, Model.SubsectionId)
                <div class="fieldItem">
                    <div class="regBrown label-container">Заголовок:</div>
                    @Html.TextBoxFor(x => x.Name, new { Class = "regInp2" })
                    <p>не более 180 символов</p>
                    <div class="rightText">
                        Заголовок - самая заметная часть объявления.<br />
                        @Html.ValidationMessageFor(x => x.Name)
                    </div>
                </div>

                <div class="fieldItem">
                    <div class="label-container">Краткое описание:</div>
                    <div>@Html.TextAreaFor(x => x.SmallDescription, new { @class = "desc" })</div>
                    <p>не более 600 символов</p>
                    <div class="rightText">
                        Краткое описание позволит пользователю сразу сориентироваться в сущности объявления. Старайтесь писать кратко и лаконично, не нужно путать краткое описание с подробным.
                        <br />
                        @Html.ValidationMessageFor(x => x.SmallDescription)
                    </div>
                </div>

            </div>
            <div class="borderReg d-none">

                <div class="fieldItem">
                    <div class="regRed label-container">Цена:</div>

                    <p class="check">@Html.CheckBoxFor(x => x.IsAuction)<label for="pertin">Торг уместен</label></p>


                    <br />

                    <div class="rightText">
                        Если вы не укажете реальную стоимость, при сортировке по цене, покупатель не найдет ваше объявление. Цена  «1 у.е.»  отпугивает покупателя своей несерьезностью.
                        <br />
                        @Html.ValidationMessageFor(x => x.Price)
                    </div>
                </div>
                <div class="fieldItem">
                    <div class="regBrown label-container">@Html.LabelFor(n => n.ContactName)</div>
                    @Html.TextBoxFor(model => model.ContactName, new { @class = "regInp1" })
                    <div class="rightText"></div>
                </div>
                <div class="fieldItem">
                    <div class="regBrown label-container">@Html.LabelFor(n => n.Phone)</div>
                    <div class="rightText"></div>
                </div>
                <div class="fieldItem">
                    <div class="regBrown label-container">@Html.LabelFor(n => n.ContactEmail)</div>
                    @Html.TextBoxFor(model => model.ContactEmail, new { @class = "regInp1" })
                    <div class="rightText"></div>
                </div>
            </div>
            <div class="borderReg d-none" style="margin-right: 0 !important">

                <div class="fieldItem w-100">
                    <span class="field-title">Фотографии:</span>
                    @*@Html.Partial("_FileUpload")*@
                </div>

            </div>
            <div class="borderReg">
                <div class="fieldItem">
                    <div style="display: none;" id="customErrorsContainer" class="validation-summary-errors">
                        <ul id="customErrors">
                            <li id="emailandphone">Нужно обязательно заполнить поле телефон или Email</li>
                        </ul>
                    </div>
                </div>
            </div>
            @Html.AntiForgeryToken()
            <div class="regBtm">
                <p>
                    <button type="submit" class="btn btn-lg btn-primary w-100">
                        <i class="fa fa-check"></i>
                        @Resources.Resource.BtnPublishAd
                    </button>
                </p>
                @*<p>Время размещения с @string.Format("{0:dd.MM.yyyy}", DateTime.Now) до @string.Format("{0:dd.MM.yyyy}", DateTime.Now.AddDays(ProjectConfiguration.Get.GetConfigValue("ExpiredAtRealty").ToInt32(null)))</p>*@
            </div>
            <div class="rules">
                <input type="checkbox" class="checkbox-input" checked="checked" id="rules">
                <label class="checkbox-label" for="rules">я принимаю условия</label>
                <a href="/Page/Details/2" target="_blank">пользовательского соглашения</a>
            </div>
        </form>
    </div>

</div>


